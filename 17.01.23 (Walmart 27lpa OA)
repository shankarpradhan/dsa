q link: https://docs.google.com/document/d/1zbKA3OZjGmhhMrpdfh7jfZtz4TrNusSesHshGueJIZU/edit

#include <bits/stdc++.h>

using namespace std;

int main() {
    int n;
    cin >> n;
    
    int a[n+1], dp[n+1];
    
    int i = 1, maxxi = 1;
    
    while(i<=n){
        cin >> a[i];
        i++;
    }
    
    dp[1] = 1;
    i = 2;


    //use hashmap to store the maximum answer for a given value
    //if we use hashmap, then there will no require to use the inner loop
    //then, tc:O(n)  sc:O(n)

    while(i<=n){
        
        dp[i] = 1;
        // ans[a[i]] = max(1, ans[a[i]]);
    
        int j = i-1;
        
        while(j>=1){
            if(a[j]*3 == a[i])
                dp[i] = max(dp[i], dp[j]+1);
            j--;
        }
        i++;
    }
    
    i = 1;
    
    while(i<=n){
        
        maxxi = max(maxxi, dp[i]);
        i++;
    }
    
    cout << maxxi << endl;
    return 0;
}

/*
3
1 2 3
output: 2
*/
